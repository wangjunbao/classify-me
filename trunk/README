Advanced Database System Project 2

a) Your name and your partner's name

Mariya Riskova (mdr2134) Chaoqing Lu (cl2814)

b) A list of all the files that you are submitting;
	
Write-up: 
	./README
Files containing the provided queries (used for probing):
	./root.txt
	./sports.txt
	./health.txt
	./computers.txt
Source Code: 

Makefile: 
	./Makefile

c) A clear description of how to run your program (note that your project must compile/run under Linux in your CS account);

1. run "make"
2. run the program by typing

TODO: I will try to fix this before submitting (right now it does not work)

    java classify.ClassifyMe <database> <specificity> <coverage> <appId>
EXAMPLE: java searchme.util.SearchMe yahoo.com 0.25 100 "Iu5udbvV34Fcg3uDwfJMTEY8Lb09.yMmFTaf7axWid3g4LmEN3G3iBUs6pa6jrRE"
	
d) A clear description of the internal design of your project, for each part of the project

The program has four classes. ClassifyMe is the main functional class. 
It contains both the web database classification and metasearching over web database (and building content summaries).
We have created a class Category which represents a given Category.
The last two classes we have built are:
- SearchResult which represents a particular page result returned by Yahoo.
- GetWordsLynx which is a wrapup around the execution of Lynx (the text browser used for page crawling)

Part 1: Web Database Classification

TODO: Mariya is writing this part

In order to classify web database we first built the 2-level categorization scheme (the category hierarchy). We then implement the query probing algorithm described in Figure 4 of the QProber paper without the confusion matrix. The function which implements this is called "classify", and internally it uses function "probe" in order to probe the database with a particular query. As required by the project we take all queries for probing from file named as the category name.
We update the coverage and specificity for the subcategories of category c as follows:

coverage(subcategory i of c) = sum of all hits when probing with quiries for subcategory i

specificity(subcategory i of c) = (specificity(c)) * (coverage(subcategory i of c)) / (sum of all hits when probing with quiries for any subcategory of c)

This is exactly as desribed in def. 3.2 and 3.3 in the QProber paper.

Then in the main function we call classify with parameter root (which has specificity 1.0). Thus, we start our classification procedure from the top.



Part 2: Metasearching over Web Databases

TODO: LV, you can write this part

e) Your Yahoo! Search BOSS Application ID (so we can test your project)

Search BOSS Application ID: Iu5udbvV34Fcg3uDwfJMTEY8Lb09.yMmFTaf7axWid3g4LmEN3G3iBUs6pa6jrRE

f) Any additional information that you consider significant. 

